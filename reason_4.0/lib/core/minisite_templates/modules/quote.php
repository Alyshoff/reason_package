<?php
reason_include_once( 'minisite_templates/modules/default.php' );
reason_include_once( 'classes/quote_helper.php' );
$GLOBALS[ '_module_class_names' ][ basename( __FILE__, '.php' ) ] = 'QuoteModule';
	
/**
 * The quote module displays a single random quote, and provides an option to refresh the quote
 *
 * @package reason
 * @subpackage minisite_modules
 * 
 * @author Nathan White
 */
	class QuoteModule extends DefaultMinisiteModule
	{
		var $acceptable_params = array ('limit_by_page_categories' => true,
										'refresh_enable' => true);
		
		function init( $args = array() )
		{	
			$qh = new QuoteHelper($this->site_id, $this->page_id);
			$qh->init();
			$this->quote =& $qh->get_random_quote();
			$this->init_head_items();
		}
		
		function init_head_items()
		{
			if ($this->quote)
			{
				$quote_id = $this->quote->id();
				$qry_string = '?site_id='.$this->site_id.'&page_id='.$this->page_id.'&quote_id='.$quote_id;
				$head_items =& $this->parent->head_items;
				$head_items->add_javascript(REASON_HTTP_BASE_PATH . 'js/jquery/jquery-1.2.1.min.js');
				$head_items->add_javascript(REASON_HTTP_BASE_PATH . 'js/quote/quote_retrieve.js'.$qry_string);
			}
		}
		
		function has_content()
		{
			if( !empty($this->quote) )
				return true;
			else
				return false;
		}
		
		function run()
		{
			echo '<div id="quotes">'."\n";
			echo '<div id="quote">'."\n";
			echo $this->quote->get_value('description');
			echo '</div>'."\n";
			echo '</div>'."\n";
		}
		
		/**
		 * This method will clear the quotation cache generated by this module for the site and page
		 */
		function clear_cache($site_id, $page_id)
		{
			
		}
	}
?>
